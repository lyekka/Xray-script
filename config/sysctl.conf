#!/bin/bash

# ------ Настройка сети: Основные параметры ------
# TTL конфигурация, по умолчанию в Linux 64
# net.ipv4.ip_default_ttl = 64

# См. RFC 1323. Рекомендуется включить.
net.ipv4.tcp_timestamps = 1
# ------ КОНЕЦ Настройка сети: Основные параметры ------

# ------ Настройка сети: Очереди и кэши ядра ------
# Рекомендуется настраивать значения в зависимости от реальных измерений
# Настройки буфера зависят от памяти
net.core.wmem_default = 524288
net.core.rmem_default = 524288
net.core.rmem_max = 536870912
net.core.wmem_max = 536870912
net.ipv4.tcp_mem = 2097152 8388608 536870912
net.ipv4.tcp_rmem = 16384 524288 536870912
net.ipv4.tcp_wmem = 16384 524288 536870912
net.ipv4.tcp_adv_win_scale = -2
# net.ipv4.tcp_collapse_max_bytes = 6291456
net.ipv4.tcp_notsent_lowat = 131072
net.ipv4.ip_local_port_range = 1024 65535
net.core.netdev_max_backlog = 65536
net.ipv4.tcp_max_syn_backlog = 65535
net.core.somaxconn = 65535
net.core.optmem_max = 33554432
net.ipv4.tcp_abort_on_overflow = 1

# Настройки управления потоком и перегрузкой
# Управление исходящим трафиком. Варианты: fq, cake
# На практике разница незначительна, можно оставить по умолчанию fq
net.core.default_qdisc = fq
# Ядро Xanmod 6.X по умолчанию использует bbr3, настройка не требуется
# На практике лучше, чем bbr, bbr2
# Однако условия сети могут влиять. Рекомендуется тестирование.
# net.ipv4.tcp_congestion_control = bbr3
net.ipv4.tcp_congestion_control = bbr
# Явное уведомление о перегрузке
# Может быть вредным в сетях с высокой перегрузкой.
# net.ipv4.tcp_ecn = 1
net.ipv4.tcp_ecn = 0
net.ipv4.tcp_ecn_fallback = 1
# TCP автоматическое окно
# Для поддержки TCP окон больше 64KB необходимо включить
net.ipv4.tcp_window_scaling = 1
# Если включено, TCP окно перегрузки сбрасывается до начального размера (CWND)
# после простоя в течение RTO.
# В большинстве случаев, особенно для долгих соединений с большим трафиком, установите 0.
# Для сетей с частыми изменениями, установите 1.
net.ipv4.tcp_slow_start_after_idle = 0
# Настройка nf_conntrack
net.nf_conntrack_max = 1000000
net.netfilter.nf_conntrack_max = 1000000
net.netfilter.nf_conntrack_tcp_timeout_fin_wait = 30
net.netfilter.nf_conntrack_tcp_timeout_time_wait = 30
net.netfilter.nf_conntrack_tcp_timeout_close_wait = 15
net.netfilter.nf_conntrack_tcp_timeout_established = 300
# net.ipv4.netfilter.ip_conntrack_tcp_timeout_established = 7200
# Настройка состояния TIME-WAIT
# В ядре 4.12 этот параметр устарел, не требует включения
# net.ipv4.tcp_tw_recycle = 0
## Работает только для клиентов, сервер при подключении к вышестоящему серверу также считается клиентом
net.ipv4.tcp_tw_reuse = 1
# Максимальное количество TIME_WAIT сокетов
# При превышении этого числа TIME_WAIT сокеты будут немедленно очищены
net.ipv4.tcp_max_tw_buckets = 65536
# ------ КОНЕЦ Настройка сети: Очереди и кэши ядра ------

# ------ Настройка сети: Другие параметры ------
# Включение выборочного подтверждения
# Рекомендуется для глобальных сетей
net.ipv4.tcp_dsack = 1
net.ipv4.tcp_sack = 1
# Включение подтверждения пересылки
# Рекомендуется для глобальных сетей
net.ipv4.tcp_fack = 1
# Количество повторных попыток для TCP SYN
net.ipv4.tcp_syn_retries = 3
net.ipv4.tcp_synack_retries = 3
# Таймаут для TCP SYN, установка 5 соответствует примерно 30с
net.ipv4.tcp_retries1 = 3
net.ipv4.tcp_retries2 = 5
# Защита от SYN флуда
# Внимание: при включении tcp_syncookies логическая длина очереди отсутствует,
# настройки Backlog игнорируются. Syncookie — это компромисс,
# нарушающий протокол TCP, делает TCP option недоступными,
# и реализация через hash вычисление — это tradeoff, а не универсальное решение.
# Не включайте бездумно, следуя "оптимизациям безопасности".
net.ipv4.tcp_syncookies = 0
# Запрет ping
# net.ipv4.icmp_echo_ignore_all = 1
# Запрет быстрого открытия TCP
net.ipv4.tcp_fastopen = 0
# Настройка пересылки IP
net.ipv4.ip_forward = 1

# Включение фильтрации обратного пути
# Для ECS за балансировщиком нагрузки Aliyun необходимо установить 0
net.ipv4.conf.default.rp_filter = 2
net.ipv4.conf.all.rp_filter = 2

# Уменьшение времени для состояния FIN-WAIT-2, чтобы система могла обрабатывать больше соединений
net.ipv4.tcp_fin_timeout = 10

# По умолчанию параметры закрытого TCP соединения сохраняются в dst_entry
# Если dst_entry не устарел, эти параметры используются для инициализации нового соединения.
# Обычно отключено.
net.ipv4.tcp_no_metrics_save = 1
# Максимальная очередь для unix socket
net.unix.max_dgram_qlen = 1024
# Частота обновления кэша маршрутизации
net.ipv4.route.gc_timeout = 100

# Включение обнаружения MTU, полезно при наличии ICMP черных дыр (в большинстве случаев)
net.ipv4.tcp_mtu_probing = 1

# Включение логирования поддельных, source-routed и перенаправленных пакетов
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1
# Обработка пакетов без source route
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0
# Настройка TCP KeepAlive
# Максимальное время простоя
net.ipv4.tcp_keepalive_time = 600
# Максимальное количество неудачных попыток, после чего уведомляет приложение о разрыве
net.ipv4.tcp_keepalive_probes = 5
# Интервал отправки проверочных пакетов
net.ipv4.tcp_keepalive_intvl = 3
# Максимальное количество TCP сокетов, не принадлежащих ни одному процессу
net.ipv4.tcp_max_orphans = 262144
# Оптимизация кэша arp_table
net.ipv4.neigh.default.gc_thresh1 = 128
net.ipv4.neigh.default.gc_thresh2 = 512
net.ipv4.neigh.default.gc_thresh3 = 4096
net.ipv4.neigh.default.gc_stale_time = 120
net.ipv4.conf.default.arp_announce = 2
net.ipv4.conf.lo.arp_announce = 2
net.ipv4.conf.all.arp_announce = 2
# ------ КОНЕЦ Настройка сети: Другие параметры ------

# ------ Настройка ядра ------

# Автоматическая перезагрузка через 1 секунду после kernel panic
kernel.panic = 1
# Увеличение количества PIDs, уменьшение проблем с переполнением
kernel.pid_max = 32768
# Максимальный размер сегмента разделяемой памяти (bytes)
kernel.shmmax = 4294967296
# Общий объем разделяемой памяти, доступной в любой момент (pages)
kernel.shmall = 1073741824
# Формат имени файла при создании core-файла
kernel.core_pattern = core_%e
# Преобразование oom в panic
vm.panic_on_oom = 1
# Минимальный объем свободной памяти, который VM должна сохранять (Kbytes)
# vm.min_free_kbytes = 1048576
# Значение выше 100 приводит к более агрессивному освобождению кэша directory и inode
vm.vfs_cache_pressure = 250
# Степень активности подкачки на диск, чем выше (0-100), тем чаще происходит подкачка
vm.swappiness = 10
# Только 10% используется для системного кэша
vm.dirty_ratio = 10
vm.overcommit_memory = 1
# Увеличение лимита дескрипторов файлов
# Исправляет ошибку: too many open files
fs.file-max = 104857600
fs.inotify.max_user_instances = 8192
fs.nr_open = 1048576
# Реакция ядра на magic key
kernel.sysrq = 1
# Устарело
# net.ipv4.tcp_low_latency = 1

# При нехватке памяти в узле система предпочитает выделять память из других узлов. Полезно для серверов типа Mongo/Redis.
vm.zone_reclaim_mode = 0
